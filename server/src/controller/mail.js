import nodemailer from "nodemailer";
const emailTemplate = `
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>New Portfolio Message</title>
  <style>
    body { font-family: Arial; background-color: #f4f4f4; margin: 0; padding: 0; }
    .container { max-width: 600px; margin: 30px auto; background-color: #fff; border-radius: 8px; padding: 20px; box-shadow: 0 0 10px rgba(0,0,0,0.1); }
    h2 { color: #333; border-bottom: 2px solid #222; padding-bottom: 10px; }
    p { font-size: 16px; color: #555; line-height: 1.5; }
    .info { margin: 10px 0; }
    .label { font-weight: bold; color: #222; }
    .footer { margin-top: 20px; font-size: 12px; color: #888; text-align: center; }
  </style>
</head>
<body>
  <div class="container">
    <h2>ðŸ“¨ New Contact Form Submission</h2>
    <div class="info">
      <p><span class="label">Name:</span> {{name}}</p>
      <p><span class="label">Email:</span> {{email}}</p>
      <p><span class="label">Subject:</span> Portfolio Contact Form</p>
    </div>
    <div class="info">
      <p><span class="label">Message:</span></p>
      <p>{{message}}</p>
    </div>
    <div class="footer">This email was generated by your portfolio contact form.</div>
  </div>
</body>
</html>
`;

export const sendMails = async (req, res) => {
  const { name, email, message } = req.body;
  const myEmail = process.env.MY_EMAIL;
  const googleAppPassword = process.env.MY_GOOGLE_PASS;

  if (!myEmail || !googleAppPassword) {
    res
      .status(500)
      .json({ message: "Email credentials not set in environment variables" });
    return;
  }

  if (!name || !email || !message) {
    res.status(400).json({ message: "All fields are required" });
    return;
  }

  try {
    const transport = nodemailer.createTransport({
      service: "gmail",
      port: 465,
      secure: true,
      auth: {
        user: myEmail,
        pass: googleAppPassword,
      },
    });

    await transport.verify();
    console.log("âœ… SMTP connection successful");

    await transport.sendMail({
      from: `Portfolio <${myEmail}>`,
      to: myEmail,
      replyTo: email,
      subject: `New Contact Form Message from ${name}`,
      html: emailTemplate
        .replace("{{name}}", name)
        .replace("{{email}}", email)
        .replace("{{message}}", message),
    });

    res.status(200).json({ message: "Email sent successfully" });
  } catch (error) {
    console.error("Error sending email:", error);
    res.status(500).json({ message: "Failed to send email" });
  }
};
